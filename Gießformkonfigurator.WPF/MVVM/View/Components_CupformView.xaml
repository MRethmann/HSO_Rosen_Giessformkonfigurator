<UserControl x:Class="Gießformkonfigurator.WPF.MVVM.View.Components_CupformView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Gießformkonfigurator.WPF.MVVM.View"
             xmlns:src="clr-namespace:Gießformkonfigurator.WPF.MVVM.ViewModel"
             xmlns:validationRules="clr-namespace:Gießformkonfigurator.WPF.MVVM.View.ValidationRules"
             mc:Ignorable="d" 
             d:DesignHeight="900" d:DesignWidth="1600"
             Background="White">
    
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <Style x:Key="errorToolTip" TargetType="Control">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" 
                        Value="{
                            Binding RelativeSource={x:Static RelativeSource.Self}, 
                            Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource errorToolTip}"/>
    </UserControl.Resources>
    
    <Grid HorizontalAlignment="Center">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="140"/>
            <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="65"/>
            <RowDefinition Height="65"/>
            <RowDefinition Height="65"/>
            <RowDefinition Height="65"/>
            <RowDefinition Height="65"/>
            <RowDefinition Height="65"/>
            <RowDefinition Height="65"/>
        </Grid.RowDefinitions>
        <Grid.Resources>
            <Style TargetType="TextBox">
                <Setter Property="Width" Value="200"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="15"/>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Margin" Value="0,0,10,0"/>
            </Style>
            <Style TargetType="RadioButton">
                <Setter Property="Width" Value="150"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Margin" Value="0,0,0,0"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
        </Grid.Resources>

        <TextBlock Text="SAP-Nr." Grid.Row="0" Grid.Column="0"/>
        <TextBox x:Name="ID_TextBox" Grid.Row="0" Grid.Column="1">
            <TextBox.Text>
                <Binding Path="Cupform.ID" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validationRules:MandatoryFieldValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <TextBlock Text="Bezeichnung" Grid.Row="1" Grid.Column="0"/>
        <TextBox x:Name="Description_TextBox" Grid.Row="1" Grid.Column="1">
            <TextBox.Text>
            <Binding Path="Cupform.Description" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                <Binding.ValidationRules>
                        <validationRules:MandatoryFieldValidationRule/>
                    </Binding.ValidationRules>
            </Binding>
            </TextBox.Text>
        </TextBox>

        <TextBlock Text="Cup-Typ" Grid.Row="2" Grid.Column="0"/>
        <TextBox x:Name="CupType_TextBox" Grid.Row="2" Grid.Column="1">
            <TextBox.Text>
                <Binding Path="Cupform.cup_typ" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validationRules:MandatoryFieldValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <TextBlock Text="Innendurchmesser" Grid.Row="3" Grid.Column="0"/>
        <TextBox x:Name="InnerDiameter_TextBox" Grid.Row="3" Grid.Column="1">
            <TextBox.Text>
                <Binding Path="Cupform.InnerDiameter" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" TargetNullValue="">
                    <Binding.ValidationRules>
                        <validationRules:InputValueRangeValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <TextBlock Text="Innendurchmesser Toleranz" Grid.Row="4" Grid.Column="0"/>
        <TextBox x:Name="ToleranceInnerDiameter_TextBox" Grid.Row="4" Grid.Column="1">
            <TextBox.Text>
                <Binding Path="Cupform.ToleranceInnerDiameter" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>

                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <TextBlock Text="Lochkreis" Grid.Row="5" Grid.Column="0"/>
        <TextBox x:Name="HoleCircle_TextBox" Grid.Row="5" Grid.Column="1">
            <TextBox.Text>
                <Binding Path="Cupform.holecircle" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <CheckBox x:Name="fuehrungsstift_CheckBox" Content="Führungsstift"
                  Grid.Column="3"
                  VerticalAlignment="Center"
                  Foreground="Black" FontSize="15"/>

        <CheckBox x:Name="innengewinde_CheckBox" Content="Innengewinde"
                  Grid.Column="3" Grid.Row="0" Grid.RowSpan="2" 
                  VerticalAlignment="Center"
                  Foreground="Black" FontSize="15"/>

        <CheckBox x:Name="HasKonus_CheckBox" Content="Konusführung"
                  Grid.Column="3" Grid.Row="1"
                  VerticalAlignment="Center"
                  Foreground="Black" FontSize="15"/>

        <CheckBox x:Name="lochfuehrung_CheckBox" Content="Lochführung"
                  Grid.Column="3" Grid.Row="1" Grid.RowSpan="2"
                  VerticalAlignment="Center"
                  Foreground="Black" FontSize="15"/>

        <CheckBox x:Name="innenkern_CheckBox" Content="Innenkern"
                  Grid.Column="3" Grid.Row="2"
                  VerticalAlignment="Center"
                  Foreground="Black" FontSize="15"/>

        <TextBlock Text="Konus Innen Max" Grid.Row="3" Grid.Column="3" Visibility="{Binding ElementName=HasKonus_CheckBox, Path=IsChecked, Converter={StaticResource BoolToVis}}"/>
        <TextBox x:Name="KonusInsideMax_TextBox" Grid.Row="3" Grid.Column="4" Visibility="{Binding ElementName=HasKonus_CheckBox, Path=IsChecked, Converter={StaticResource BoolToVis}}"> 
            <TextBox.Text>
                <Binding Path="Cupform.KonusInsideMax" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" TargetNullValue="">
                    <Binding.ValidationRules>
                        <validationRules:InputValueRangeValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <TextBlock Text="Konus Innen Min" Grid.Row="4" Grid.Column="3" Visibility="{Binding ElementName=HasKonus_CheckBox, Path=IsChecked, Converter={StaticResource BoolToVis}}"/>
        <TextBox x:Name="KonusInsideMin_TextBox" Grid.Row="4" Grid.Column="4" Visibility="{Binding ElementName=HasKonus_CheckBox, Path=IsChecked, Converter={StaticResource BoolToVis}}">
            <TextBox.Text>
                <Binding Path="Cupform.KonusInsidemin" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" TargetNullValue="">
                    <Binding.ValidationRules>
                        <validationRules:InputValueRangeValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>

        </TextBox>

        <TextBlock Text="Konus Innen Winkel" Grid.Row="5" Grid.Column="3" Visibility="{Binding ElementName=HasKonus_CheckBox, Path=IsChecked, Converter={StaticResource BoolToVis}}"/>
        <TextBox x:Name="KonusInsideAngel_TextBox" Grid.Row="5" Grid.Column="4" Visibility="{Binding ElementName=HasKonus_CheckBox, Path=IsChecked, Converter={StaticResource BoolToVis}}">
            <TextBox.Text>
                <Binding Path="Cupform.KonusInsideAngel" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" TargetNullValue="">
                    <Binding.ValidationRules>
                        <validationRules:InputValueRangeValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
                 
        </TextBox>

        <Button x:Name="Hinzufuegen" Content="Hinzufügen" Command="{Binding insertIntoDbCmd}" Grid.Column="4" Grid.Row="6">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Width" Value="150"/>
                    <Setter Property="Height" Value="50"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="IsEnabled" Value="False"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=ID_TextBox}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Description_TextBox}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=CupType_TextBox}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=InnerDiameter_TextBox}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=ToleranceInnerDiameter_TextBox}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=HoleCircle_TextBox}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=KonusInsideMax_TextBox}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=KonusInsideMin_TextBox}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=KonusInsideAngel_TextBox}" Value="False"/> 
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</UserControl>
