<UserControl x:Class="Giessformkonfigurator.WPF.MVVM.View.Components_RingView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Giessformkonfigurator.WPF.MVVM.View"
             xmlns:validationRules="clr-namespace:Giessformkonfigurator.WPF.MVVM.View.ValidationRules"
             mc:Ignorable="d" 
             d:DesignHeight="1200" d:DesignWidth="1600"
             Background="White">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
    </UserControl.Resources>

    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Margin="10">
        <Grid HorizontalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="152"/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="65"/>
                <RowDefinition Height="65"/>
                <RowDefinition Height="65"/>
                <RowDefinition Height="65"/>
                <RowDefinition Height="65"/>
                <RowDefinition Height="65"/>
                <RowDefinition Height="65"/>
                <RowDefinition Height="65"/>
                <RowDefinition Height="65"/>
                <RowDefinition Height="65"/>
            </Grid.RowDefinitions>

            <Grid.Resources>
                <Style TargetType="TextBox">
                    <Setter Property="Width" Value="200"/>
                    <Setter Property="Height" Value="40"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="FontSize" Value="15"/>
                </Style>

                <Style TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="Margin" Value="0,0,10,0"/>
                </Style>

                <Style TargetType="RadioButton">
                    <Setter Property="Width" Value="150"/>
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="Margin" Value="0,0,0,0"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="FontSize" Value="15"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </Grid.Resources>

            <TextBlock Text="Basisattribute" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" FontSize="20" FontWeight="Bold"/>

            <TextBlock Text="SAP-Nr." Grid.Row="1" Grid.Column="0"/>
            <TextBox x:Name="ID_TextBox" Grid.Row="1" Grid.Column="1">
                <TextBox.Text>
                    <Binding Path="Ring.ID" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validationRules:MandatoryFieldValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBlock Text="Bezeichnung" Grid.Row="2" Grid.Column="0"/>
            <TextBox x:Name="Description_TextBox" Grid.Row="2" Grid.Column="1" >
                <TextBox.Text>
                    <Binding Path="Ring.Description" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>

                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBlock Text="Außendurchmeser " Grid.Row="3" Grid.Column="0"/>
            <TextBox x:Name="OuterDiameter_TextBox" Grid.Row="3" Grid.Column="1">
                <TextBox.Text>
                    <Binding Path="Ring.OuterDiameter" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validationRules:InputValueRangeValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBlock Text="Höhe" Grid.Row="4" Grid.Column="0"/>
            <TextBox x:Name="Height_TextBox" Grid.Row="4" Grid.Column="1">
                <TextBox.Text>
                    <Binding Path="Ring.Height" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validationRules:InputValueRangeValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBlock Text="Füllhöhe Max." Grid.Row="5" Grid.Column="0"/>
            <TextBox x:Name="FillHeightMax_TextBox" Grid.Row="5" Grid.Column="1">
                <TextBox.Text>
                    <Binding Path="Ring.FillHeightMax" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" TargetNullValue="">
                        <Binding.ValidationRules>
                            <validationRules:InputValueRangeValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBlock Text="Innendurchmesser" Grid.Row="6" Grid.Column="0"/>
            <TextBox x:Name="InnerDiameter_TextBox" Grid.Row="6" Grid.Column="1">
                <TextBox.Text>
                    <Binding Path="Ring.InnerDiameter" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" TargetNullValue="">
                        <Binding.ValidationRules>
                            <validationRules:InputValueRangeValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBlock Text="Konusführung           " Grid.Row="1" Grid.Column="3"/>
            <CheckBox x:Name="HasKonus" Grid.Row="1" Grid.Column="4" VerticalAlignment="Center" IsChecked="{Binding Ring.HasKonus}" />

            <TextBlock Text="Typenattribute" Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="2" FontSize="20" FontWeight="Bold"/>

            <TextBlock Text="Konus Innen Max." Grid.Row="2" Grid.Column="3" Visibility="{Binding ElementName=HasKonus, Path=IsChecked, Converter={StaticResource BoolToVis}}"/>
            <TextBox x:Name="InnerKonusMax_TextBox" Grid.Row="2" Grid.Column="4" Visibility="{Binding ElementName=HasKonus, Path=IsChecked, Converter={StaticResource BoolToVis}}">
                <TextBox.Text>
                    <Binding Path="Ring.InnerKonusMax" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" TargetNullValue="">
                        <Binding.ValidationRules>
                            <validationRules:InputValueRangeValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBlock Text="Konus Innen Min" Grid.Row="3" Grid.Column="3" Visibility="{Binding ElementName=HasKonus, Path=IsChecked, Converter={StaticResource BoolToVis}}"/>
            <TextBox x:Name="InnerKonusMin_TextBox" Grid.Row="3" Grid.Column="4" Visibility="{Binding ElementName=HasKonus, Path=IsChecked, Converter={StaticResource BoolToVis}}">
                <TextBox.Text>
                    <Binding Path="Ring.InnerKonusMin" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" TargetNullValue="">
                        <Binding.ValidationRules>
                            <validationRules:InputValueRangeValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBlock Text="Konus Innen Winkel" Grid.Row="4" Grid.Column="3" Visibility="{Binding ElementName=HasKonus, Path=IsChecked, Converter={StaticResource BoolToVis}}"/>
            <TextBox x:Name="InnerKonusAngle_TextBox" Grid.Row="4" Grid.Column="4" Visibility="{Binding ElementName=HasKonus, Path=IsChecked, Converter={StaticResource BoolToVis}}">
                <TextBox.Text>
                    <Binding Path="Ring.InnerKonusAngle" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" TargetNullValue="">
                        <Binding.ValidationRules>
                            <validationRules:InputValueRangeValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>


            <TextBlock Text="Konus Innen Höhe" Grid.Row="5" Grid.Column="3" Visibility="{Binding ElementName=HasKonus, Path=IsChecked, Converter={StaticResource BoolToVis}}"/>
            <TextBox x:Name="KonusHeight_TextBox" Grid.Row="5" Grid.Column="4" Visibility="{Binding ElementName=HasKonus, Path=IsChecked, Converter={StaticResource BoolToVis}}">
                <TextBox.Text>
                    <Binding Path="Ring.KonusHeight" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" TargetNullValue="">
                        <Binding.ValidationRules>
                            <validationRules:InputValueRangeValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <Button x:Name="Hinzufuegen" Content="Hinzufügen" Command="{Binding InsertIntoDbCmd}" Grid.Column="9" Grid.Row="8">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Width" Value="150"/>
                        <Setter Property="Height" Value="50"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="FontSize" Value="15"/>
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=ID_TextBox}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Description_TextBox}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=OuterDiameter_TextBox}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Height_TextBox}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=FillHeightMax_TextBox}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=InnerDiameter_TextBox}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=KonusHeight_TextBox}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=InnerKonusMax_TextBox}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=InnerKonusMin_TextBox}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=InnerKonusAngle_TextBox}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

        </Grid>
    </ScrollViewer>
</UserControl>
           
